name: Release

on:
  push:
    tags:
      - 'v*-depinder'

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os: [win, linux, osx]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract Semver
        id: semver_parser
        run: |
          semver=${TAG#"refs/tags/v"}
          semver=${semver%"-depinder"}

          echo ::set-output name=semver::$semver
        env:
          TAG: ${{ github.ref }}

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Release for OS
        run: |
          mkdir bin
          dotnet publish -r ${{matrix.os}}-x64 --self-contained true -p:PublishSingleFile=true -o bin -c Release -p:Version=${{ steps.semver_parser.outputs.semver }} NugetDotnet5Inspector/NugetDotnet5Inspector.csproj

      - name: Prepare Assets
        run: |
          mkdir -p nuget-inspector/results
          cp README.md nuget-inspector/README.md
          rm bin/*.pdb
          cp -R bin/* nuget-inspector

      - name: Create Archive
        run: zip -r nuget-inspector-${{ matrix.os }}.zip nuget-inspector

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: nuget-inspector-${{ matrix.os }}.zip
          path: nuget-inspector-${{ matrix.os }}.zip

  release-and-upload:
    name: Release and Upload
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract Semver
        id: semver_parser
        run: |
          semver=${TAG#"refs/tags/v"}
          semver=${semver%"-voyager"}

          echo ::set-output name=semver::$semver
        env:
          TAG: ${{ github.ref }}

      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: List all downloads
        run: |
          echo "Running in directory $PWD"
          ls -R -al

      - name: Prepare Release Notes
        run: touch ${{ github.workspace }}/releaseNotes/v${{ steps.semver_parser.outputs.semver }}.md

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: NugetInspector Depinder ${{ steps.semver_parser.outputs.semver }}
          body_path: ${{ github.workspace }}/releaseNotes/v${{ steps.semver_parser.outputs.semver }}.md
          body: ""
          prerelease: false
          draft: false
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            ./nuget-inspector-win.zip/nuget-inspector-win.zip
            ./nuget-inspector-linux.zip/nuget-inspector-linux.zip
            ./nuget-inspector-osx.zip/nuget-inspector-osx.zip

#  npm-publish:
#    name: Publish Npm Package
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#      packages: write
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Setup Node
#        uses: actions/setup-node@v2
#        with:
#          node-version: '16.x'
#          cache: 'npm'
#          registry-url: 'https://npm.pkg.github.com'
#          scope: '@dxworks'
#
#      - name: Prepare Node Dependencies
#        run: npm install
#
#      - name: Extract Semver
#        id: semver_parser
#        run: |
#          semver=${TAG#"refs/tags/v"}
#          semver=${semver%"-voyager"}
#
#          echo ::set-output name=semver::$semver
#        env:
#          TAG: ${{ github.ref }}
#
#      - name: Setup Version
#        run: node_modules/.bin/json -I -f package.json -e "this.version='$VERSION'"
#        env:
#          VERSION: ${{ steps.semver_parser.outputs.semver }}
#
#      - name: Publish NPM
#        run: npm publish
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
